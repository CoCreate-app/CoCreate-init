/* CoCreateJS */
const CoCreateInit={modules:{},newModules:{},observer:null,register:function(e,t,n){this.modules[e]||(this.modules[e]={func:n,instance:t})},init:function(){if(!this.observer)try{const e=this;this.observer=new MutationObserver(function(t){e.mutationLogic(t)});const t={attribute:!1,childList:!0,characterData:!1,subtree:!0};this.observer.observe(document.body,t)}catch(e){}},registerModules:function(e,t,n){this.newModules[e]||(this.newModules[e]={func:n,instance:t})},runInit:function(e){console.log(this.newModules,e);for(let[t,n]of Object.entries(this.newModules))n.func.call(n.instance,e)},mutationLogic:function(e){const t=this;console.log("mutations event....."),e.forEach(function(e){if("childList"==e.type&&1==e.addedNodes.length){const n=e.addedNodes.item(0);if(!t.modules)return;if(!n.querySelectorAll||!n.getAttribute)return;for(let[e,o]of Object.entries(t.modules))o.func.call(o.instance,n)}})}};CoCreateInit.init();